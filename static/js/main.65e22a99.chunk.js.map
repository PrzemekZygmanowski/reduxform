{"version":3,"sources":["lib/renderField.js","components/NameInput.js","components/PreparationInput.js","components/TypeInput.js","components/PizzaInput.js","components/SoupInput.js","components/SandwichInput.js","components/PrimaryMenuForm.js","lib/validate.js","pages/MenuForm.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["renderField","input","label","type","min","max","step","meta","touched","error","className","placeholder","NameInput","Field","name","component","PreparationInput","SelectField","children","TypeInput","value","PizzaInput","SoupInput","SandwichInput","PrimaryMenuForm","props","hasTypeValue","handleSubmit","pristine","reset","submitting","onSubmit","disabled","onClick","reduxForm","form","validate","values","errors","hours","minutes","seconds","no_of_slices","diameter","spiciness_scale","slices_of_bread","selector","formValueSelector","connect","state","formatNumber","d","toString","MenuForm","postValues","data","a","valuesToSubmit","preparation_time","options","method","body","JSON","stringify","headers","fetch","then","res","json","window","alert","catch","validationErrors","SubmissionError","console","log","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","formReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65e22a99.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Field.css';\r\n\r\nexport const renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  min,\r\n  max,\r\n  step,\r\n  meta: { touched, error },\r\n}) => (\r\n  <div className='field'>\r\n    <label className='field_label'>{label}</label>\r\n    <div>\r\n      <input\r\n        {...input}\r\n        placeholder={label}\r\n        type={type}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        className='field_input'\r\n      />\r\n      {touched && error && <span className='err_message'>{error}</span>}\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { renderField } from '../lib/renderField';\r\n\r\nexport const NameInput = () => {\r\n  return (\r\n    <Field name='name' type='text' component={renderField} label='Dish Name' />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport '../css/Field.css';\r\n\r\nexport const renderField = ({\r\n  input,\r\n  type,\r\n  placeholder,\r\n  min,\r\n  max,\r\n  step,\r\n  meta: { touched, error },\r\n}) => (\r\n  <div>\r\n    <input\r\n      {...input}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      min={min}\r\n      max={max}\r\n      step={step}\r\n      className='field_input field_input_time'\r\n    />\r\n    <div className='err_item'>\r\n      {touched && error && <span className='err_message'>{error}</span>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const PreparationInput = () => {\r\n  return (\r\n    <div className='field'>\r\n      <label className='field_label'>Preparation Time</label>\r\n      <div className='field_time'>\r\n        <Field\r\n          name='hours'\r\n          type='number'\r\n          placeholder='HH'\r\n          component={renderField}\r\n          min='00'\r\n          max='24'\r\n          step='1'\r\n        />\r\n\r\n        <Field\r\n          name='minutes'\r\n          type='number'\r\n          placeholder='MM'\r\n          component={renderField}\r\n          min='00'\r\n          max='60'\r\n          step='1'\r\n        />\r\n\r\n        <Field\r\n          name='seconds'\r\n          type='number'\r\n          placeholder='SS'\r\n          component={renderField}\r\n          min='00'\r\n          max='60'\r\n          step='1'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport '../css/Field.css';\r\n\r\nconst SelectField = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  meta: { touched, error },\r\n  children,\r\n}) => (\r\n  <div className='field'>\r\n    <label className='field_label'>{label}</label>\r\n    <div>\r\n      <div>\r\n        <select className='field_input' {...input} placeholder={placeholder}>\r\n          {children}\r\n        </select>\r\n        {touched && error && <span className='err_message'>{error}</span>}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const TypeInput = () => {\r\n  return (\r\n    <Field\r\n      name='type'\r\n      label='Dish Type'\r\n      component={SelectField}\r\n      placeholder='Dish Type'\r\n    >\r\n      <option />\r\n      <option value='pizza'>Pizza</option>\r\n      <option value='soup'>Soup</option>\r\n      <option value='sandwich'>Sandwich</option>\r\n    </Field>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { renderField } from '../lib/renderField';\r\n\r\nexport const PizzaInput = () => {\r\n  return (\r\n    <>\r\n      <Field\r\n        name='no_of_slices'\r\n        component={renderField}\r\n        label='Number of slices'\r\n        type='number'\r\n        min={1}\r\n        step={1}\r\n      />\r\n      <Field\r\n        name='diameter'\r\n        component={renderField}\r\n        label='Diameter'\r\n        type='number'\r\n        min='20'\r\n        step='5'\r\n        placeholder='20-60 cm'\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { renderField } from '../lib/renderField';\r\nimport '../css/Field.css';\r\n\r\nexport const SoupInput = () => {\r\n  return (\r\n    <Field\r\n      name='spiciness_scale'\r\n      label='Spiciness scale'\r\n      component={renderField}\r\n      type='number'\r\n      min='0'\r\n      step='1'\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { renderField } from '../lib/renderField';\r\n\r\nexport const SandwichInput = () => {\r\n  return (\r\n    <Field\r\n      name='slices_of_bread'\r\n      component={renderField}\r\n      label='Slices of bread'\r\n      type='number'\r\n      min='1'\r\n      step='1'\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, formValueSelector } from 'redux-form';\r\nimport { NameInput } from './NameInput';\r\nimport { PreparationInput } from './PreparationInput';\r\nimport { TypeInput } from './TypeInput';\r\nimport { PizzaInput } from './PizzaInput';\r\nimport { SoupInput } from './SoupInput';\r\nimport { SandwichInput } from './SandwichInput';\r\nimport { validate } from '../lib/validate';\r\nimport '../css/Button.css';\r\nimport '../css/Form.css';\r\n\r\nlet PrimaryMenuForm = (props) => {\r\n  const { hasTypeValue, handleSubmit, pristine, reset, submitting } = props;\r\n\r\n  return (\r\n    <form className='menu_form' onSubmit={handleSubmit}>\r\n      <h1>Menu Form</h1>\r\n      <div className='form_container'>\r\n        <div className='form_item'>\r\n          <h2 className='form_item_title'>Primary information</h2>\r\n          <NameInput />\r\n          <PreparationInput />\r\n          <TypeInput />\r\n        </div>\r\n        <div className='form_item'>\r\n          <h2 className='form_item_title'>Additional information</h2>\r\n          {!hasTypeValue ? (\r\n            <h3>Please, choose the meal type</h3>\r\n          ) : (\r\n            (hasTypeValue === 'pizza' && <PizzaInput />) ||\r\n            (hasTypeValue === 'soup' && <SoupInput />) ||\r\n            (hasTypeValue === 'sandwich' && <SandwichInput />)\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='btn_wrapper'>\r\n        <button className='btn primary_btn' type='submit' disabled={submitting}>\r\n          Submit\r\n        </button>\r\n        <button\r\n          className='btn secondary_btn'\r\n          type='button'\r\n          disabled={pristine || submitting}\r\n          onClick={reset}\r\n        >\r\n          Clear Values\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nPrimaryMenuForm = reduxForm({\r\n  form: 'menuForm',\r\n  validate,\r\n})(PrimaryMenuForm);\r\n\r\nconst selector = formValueSelector('menuForm');\r\nPrimaryMenuForm = connect((state) => {\r\n  const hasTypeValue = selector(state, 'type');\r\n\r\n  return {\r\n    hasTypeValue,\r\n  };\r\n})(PrimaryMenuForm);\r\n\r\nexport default PrimaryMenuForm;\r\n","export const validate = (values) => {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = 'Sorry, You have to name your dish';\r\n  }\r\n\r\n  if (!values.hours || !values.minutes || !values.seconds) {\r\n    errors.hours = 'Sorry, You have to set preparation time';\r\n  }\r\n\r\n  if (!values.type) {\r\n    errors.type = 'Sorry, dish type is required';\r\n  }\r\n\r\n  if (!values.no_of_slices) {\r\n    errors.no_of_slices = 'It will be easier to eat after we divide the pizza';\r\n  } else if (+values.no_of_slices > 10) {\r\n    errors.no_of_slices =\r\n      'Dividing a pizza into 10 pieces is already difficult enough ';\r\n  } else if (+values.no_of_slices === 0) {\r\n    errors.no_of_slices = '0 is not a pizza!';\r\n  }\r\n\r\n  if (!values.diameter) {\r\n    errors.diameter = \"Don't be shy\";\r\n  } else if (+values.diameter > 60) {\r\n    errors.diameter = \"We don't have such large plates and pizza boxes\";\r\n  }\r\n\r\n  if (+values.spiciness_scale > 10) {\r\n    errors.spiciness_scale = 'I strongly advise against such a choice';\r\n  }\r\n\r\n  if (!values.slices_of_bread) {\r\n    errors.slices_of_bread = \"Don't be shy\";\r\n  } else if (+values.slices_of_bread > 4) {\r\n    errors.slices_of_bread = '4 is such a beautiful number';\r\n  } else if (+values.slices_of_bread === 0) {\r\n    errors.no_of_slices = '0 is not a sandwich!';\r\n  }\r\n\r\n  return errors;\r\n};\r\n","import React from 'react';\r\nimport PrimaryMenuForm from '../components/PrimaryMenuForm';\r\nimport { SubmissionError } from 'redux-form';\r\nimport '../css/Form.css';\r\n\r\nconst formatNumber = (d) => {\r\n  return d < 10 ? '0' + d.toString() : d.toString();\r\n};\r\n\r\nexport const MenuForm = () => {\r\n  const postValues = async (data) => {\r\n    const endpoint = 'https://frosty-wood-6558.getsandbox.com:443/dishes';\r\n\r\n    const valuesToSubmit = {\r\n      name: data.name,\r\n      preparation_time:\r\n        formatNumber(data.hours) +\r\n        ':' +\r\n        formatNumber(data.hours) +\r\n        ':' +\r\n        formatNumber(data.hours),\r\n      type: data.type,\r\n      no_of_slices: data.no_of_slices && +data.no_of_slices,\r\n      diameter: data.diameter && +data.diameter,\r\n      spiciness_scale: data.spiciness_scale && +data.spiciness_scale,\r\n      slices_of_bread: data.slices_of_bread && +data.slices_of_bread,\r\n    };\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      body: JSON.stringify(valuesToSubmit),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    fetch(endpoint, options)\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        window.alert(\r\n          `Congratulations, You submitted:\\n\\n${JSON.stringify(res, null, 2)}`\r\n        )\r\n      )\r\n      .catch((error) => {\r\n        if (error.validationErrors) {\r\n          throw new SubmissionError(error.validationErrors);\r\n        } else {\r\n          console.log(error);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    postValues(values);\r\n  };\r\n\r\n  return (\r\n    <div className='menu_container'>\r\n      <PrimaryMenuForm onSubmit={handleSubmit} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { MenuForm } from './pages/MenuForm';\nimport './css/App.css';\n\nfunction App() {\n  return <MenuForm />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const rootReducer = combineReducers({\r\n  form: formReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { rootReducer } from './reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}